#
# Copyright (c) 2016-2017 Sam4Mobile
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Customize Kitchen with some monkey patching:
# - Suites scheduler
#   <% load "#{File.dirname(__FILE__)}/test/kitchen_command.rb" %>
# - Create kitchen network if missing
#   <% net_test = '! docker network ls | grep "kitchen" >/dev/null 2>&1' %>
#   <% net_create = 'docker network create --driver bridge kitchen' %>
#   <% `if #{net_test}; then #{net_create}; fi` %>

driver:
  name: docker_cli
  http_proxy:
  volume:
    - /sys/fs/cgroup:/sys/fs/cgroup:ro
  command: /sbin/init
  network: kitchen
  security_opt: seccomp=unconfined
  skip_preparation: true
  instance_host_name: true
  instance_container_name: true

transport:
  name: docker_cli

provisioner:
  name: chef_zero
  always_update_cookbooks: true

platforms:
  - name: centos-7
    driver:
      image: sam4mobile/centos-systemd-kitchen

suites:
  # Install a stand-alone consul
  - name: consul-swarm
    run_list:
      - recipe[consul-platform]
    attributes:
      consul-platform:
        hosts: consul-swarm-centos-7
        options:
          bind: '0.0.0.0'
          client: '0.0.0.0'
        package_retries: 1

<% { 'docker-platform' => 3 }.each do |name,n| %>
  <% ("1".."#{n}").each do |i| %>
  - name: <%= name %>-<%= i %>
    driver:
      privileged: true
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - /lib/modules:/lib/modules:ro
    run_list:
      - role[<%= name %>-kitchen]
    attributes:
      docker-platform:
        role: 'docker-platform-kitchen'
        size: 3
        package_retries: 1
        initiator_id: 1
        systemd_unit:
          Service:
            ExecStart: /usr/bin/dockerd --storage-driver=vfs
        docker_volume:
          alpine_data:
        docker_image:
          my_alpine:
            repo: alpine
            action: pull
          busybox:
        docker_container:
          an_echo_server:
            repo: alpine
            network_disabled: true
            command: 'nc -ll -p 7777 -e /bin/cat'
            port: '7777:7777'
            volumes: [['alpine_data:/data']]
            restart_policy: always
            action: run
            subscribes: [redeploy, 'docker_image[my_alpine]', immediately]
          kill_an_echo_server:
            container_name: an_echo_server
            action: kill
          restart_an_echo_server:
            container_name: an_echo_server
            action: restart
        swarm:
          consul:
            hosts: 'consul-swarm-centos-7'
            options:
              listen_addr: '0.0.0.0:2377'
              advertise_addr: '127.0.0.1'
              force_new_cluster:
            action: ['create', 'join']
        networks:
            kitchen_swarm:
              options:
                driver: overlay
              action: create
        services:
          redis:
            options:
              replicas: 5
              network: kitchen_swarm
              image: 'redis:latest'
            action: create
  <% end %>
<% end %>
